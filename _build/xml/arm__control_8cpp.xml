<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="arm__control_8cpp" kind="file" language="C++">
    <compoundname>arm_control.cpp</compoundname>
    <includes local="no">ros/ros.h</includes>
    <includes local="no">std_msgs/Float64.h</includes>
    <includes local="no">sensor_msgs/JointState.h</includes>
    <includes local="no">std_msgs/Int64.h</includes>
    <incdepgraph>
      <node id="5">
        <label>std_msgs/Int64.h</label>
      </node>
      <node id="3">
        <label>std_msgs/Float64.h</label>
      </node>
      <node id="4">
        <label>sensor_msgs/JointState.h</label>
      </node>
      <node id="1">
        <label>src/arm_control.cpp</label>
        <link refid="arm__control_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>ros/ros.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="var">
      <memberdef kind="variable" id="arm__control_8cpp_1ab66086d63f3afabe77182af84d5efae8" prot="public" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t state_machine</definition>
        <argsstring></argsstring>
        <name>state_machine</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="31" column="13" bodyfile="src/arm_control.cpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="arm__control_8cpp_1aa468680099a9995abda4db045d5a551d" prot="public" static="no" mutable="no">
        <type>std_msgs::Float64</type>
        <definition>std_msgs::Float64 j_msg</definition>
        <argsstring></argsstring>
        <name>j_msg</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="32" column="19" bodyfile="src/arm_control.cpp" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="arm__control_8cpp_1a81e95be5a283a32946d7b6c373cf9e11" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher j1_pub</definition>
        <argsstring></argsstring>
        <name>j1_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="33" column="16" bodyfile="src/arm_control.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="arm__control_8cpp_1a98180b0dffe87653496fefc0d84d4271" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher j2_pub</definition>
        <argsstring></argsstring>
        <name>j2_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="33" column="23" bodyfile="src/arm_control.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="arm__control_8cpp_1aaa682b9c0f2304b17e874d8298afce04" prot="public" static="no" mutable="no">
        <type>ros::Publisher</type>
        <definition>ros::Publisher j3_pub</definition>
        <argsstring></argsstring>
        <name>j3_pub</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="33" column="30" bodyfile="src/arm_control.cpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="arm__control_8cpp_1a1bdeaad86a1ceb5e72394235b05ba848" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double j1_pos</definition>
        <argsstring></argsstring>
        <name>j1_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="34" column="8" bodyfile="src/arm_control.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="arm__control_8cpp_1a87363915c1041ad17ae2595a62b771fb" prot="public" static="no" mutable="no">
        <type>double</type>
        <definition>double j2_pos</definition>
        <argsstring></argsstring>
        <name>j2_pos</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="34" column="15" bodyfile="src/arm_control.cpp" bodystart="34" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="arm__control_8cpp_1a481c82a288c86c1db008b992fad3a2c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void js_cb</definition>
        <argsstring>(const sensor_msgs::JointState &amp;msg)</argsstring>
        <name>js_cb</name>
        <param>
          <type>const sensor_msgs::JointState &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Function that executes a callback for the /robot/joint_states topic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>JointState message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function is executed every time a new message has been published to the topic. It reads the position of joint 1 and joint 2 of the arm and stores them in the global variables. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="42" column="6" bodyfile="src/arm_control.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="arm__control_8cpp_1a9d1fad4d4e68d9d0ee0abb499f89c175" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void done_cb</definition>
        <argsstring>(const std_msgs::Int64 &amp;msg)</argsstring>
        <name>done_cb</name>
        <param>
          <type>const std_msgs::Int64 &amp;</type>
          <declname>msg</declname>
        </param>
        <briefdescription>
<para>Function that executes a callback for the /isDone topic. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">msg</parametername>
</parameternamelist>
<parameterdescription>
<para>Int64 message</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This function is executed every time a new message has been published to the topic. It reads the message and if it is 1, then the arm is moved to the home position and the nodes finishes. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="53" column="6" bodyfile="src/arm_control.cpp" bodystart="53" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="arm__control_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Main function. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0</para>
</simplesect>
Main function, initializes the node and does the rotation of the arm pipiline. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/arm_control.cpp" line="71" column="5" bodyfile="src/arm_control.cpp" bodystart="71" bodyend="128"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Node done to move the arm of the robot. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ayan Mazhitov </para>
</simplesect>
<simplesect kind="version"><para>1.0 </para>
</simplesect>
<simplesect kind="date"><para>2023-02-26</para>
</simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2023</para>
</simplesect>
Subscribes to: <linebreak/>
 /robot/joint_states /isDone</para>
<para>Publishes to: <linebreak/>
 /robot/joint1_position_controller/command /robot/joint2_position_controller/command</para>
<para>Description: Allows the arm structure of the robot to rotate permitting the detection of all the markers located in the initial room. The base joint rotates around itself of 360 dergees whereas the camera tilts of about 20 degree both upwards and downwards. This is done until all markers have been detected. When all markers have been detected, a message from aruco_detector node is made. This server node makes the arm return in its home position and after that the node is shut down. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="27"><highlight class="preprocessor">#include<sp/>&lt;ros/ros.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/Float64.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;sensor_msgs/JointState.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;std_msgs/Int64.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal">std::size_t<sp/>state_machine<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="32"><highlight class="normal">std_msgs::Float64<sp/>j_msg;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">ros::Publisher<sp/>j1_pub,<sp/>j2_pub,<sp/>j3_pub;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>j1_pos,<sp/>j2_pos;</highlight></codeline>
<codeline lineno="42"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__control_8cpp_1a481c82a288c86c1db008b992fad3a2c1" kindref="member">js_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sensor_msgs::JointState&amp;<sp/>msg){</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>j1_pos<sp/>=<sp/>msg.position[0];</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>j2_pos<sp/>=<sp/>msg.position[1];</highlight></codeline>
<codeline lineno="45"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="arm__control_8cpp_1a9d1fad4d4e68d9d0ee0abb499f89c175" kindref="member">done_cb</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std_msgs::Int64&amp;<sp/>msg){</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msg.data<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_msg.data<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j1_pub.publish(j_msg);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j2_pub.publish(j_msg);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::shutdown();</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal">}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="arm__control_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv){</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::init(argc,<sp/>argv,<sp/></highlight><highlight class="stringliteral">&quot;arm_control&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::NodeHandle<sp/>nh;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>ROS<sp/>stuff</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Subscriber<sp/>js_sub,<sp/>done_sub;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>js_sub<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/robot/joint_states&quot;</highlight><highlight class="normal">,<sp/>10,<sp/><ref refid="arm__control_8cpp_1a481c82a288c86c1db008b992fad3a2c1" kindref="member">js_cb</ref>);</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>done_sub<sp/>=<sp/>nh.subscribe(</highlight><highlight class="stringliteral">&quot;/isDone&quot;</highlight><highlight class="normal">,<sp/>10,<sp/><ref refid="arm__control_8cpp_1a9d1fad4d4e68d9d0ee0abb499f89c175" kindref="member">done_cb</ref>);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>j1_pub<sp/>=<sp/>nh.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;/robot/joint1_position_controller/command&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>j2_pub<sp/>=<sp/>nh.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;/robot/joint2_position_controller/command&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>j3_pub<sp/>=<sp/>nh.advertise&lt;std_msgs::Float64&gt;(</highlight><highlight class="stringliteral">&quot;/robot/joint3_position_controller/command&quot;</highlight><highlight class="normal">,<sp/>10);</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/>ros::Rate<sp/>loop_rate(50);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(ros::ok())<sp/>{</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Arm<sp/>control<sp/>pipeline,<sp/>first<sp/>tilt<sp/>the<sp/>camera<sp/>a<sp/>little<sp/>bit<sp/>downwards.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_machine<sp/>==<sp/>0){</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(j2_pos<sp/>-<sp/>0.3)<sp/>&gt;<sp/>0.1){</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_msg.data<sp/>=<sp/>0.3;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j2_pub.publish(j_msg);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_machine<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>rotate<sp/>the<sp/>base<sp/>joint<sp/>to<sp/>the<sp/>left</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_machine<sp/>==<sp/>1){</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(j1_pos<sp/>+<sp/>3.14)<sp/>&gt;<sp/>0.1){</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_msg.data<sp/>=<sp/>-3.14;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j1_pub.publish(j_msg);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_machine<sp/>=<sp/>2;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Then<sp/>rotate<sp/>the<sp/>base<sp/>joint<sp/>to<sp/>the<sp/>right</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_machine<sp/>==<sp/>2){</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(j1_pos<sp/>-<sp/>3.14)<sp/>&gt;<sp/>0.1){</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_msg.data<sp/>=<sp/>+3.14;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j1_pub.publish(j_msg);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_machine<sp/>=<sp/>3;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Tilt<sp/>the<sp/>camera<sp/>upwards<sp/>to<sp/>see<sp/>the<sp/>markers<sp/>above</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_machine<sp/>==<sp/>3){</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>abs(j2_pos<sp/>+<sp/>0.77)<sp/>&gt;<sp/>0.1<sp/>){</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_msg.data<sp/>=<sp/>-0.77;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j2_pub.publish(j_msg);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_machine<sp/>=<sp/>4;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Spin<sp/>the<sp/>base<sp/>joint</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(state_machine<sp/>==<sp/>4){</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(abs(j1_pos<sp/>+<sp/>3.14)<sp/>&gt;<sp/>0.1){</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j_msg.data<sp/>=<sp/>-3.14;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>j1_pub.publish(j_msg);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="keywordflow">else</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>state_machine<sp/>=<sp/>5;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ros::spinOnce();</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>loop_rate.sleep();</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="128"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/arm_control.cpp"/>
  </compounddef>
</doxygen>
